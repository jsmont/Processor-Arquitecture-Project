$date
	Wed Jan  3 01:38:27 2018
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module test $end
$var reg 1 ! clk $end
$var reg 1 " reset $end
$scope module dpath $end
$var wire 1 # D_We $end
$var wire 1 ! clk $end
$var wire 1 " reset $end
$var wire 32 $ I_instruction [31:0] $end
$var wire 5 % D_rd [4:0] $end
$var wire 5 & D_r2 [4:0] $end
$var wire 5 ' D_r1 [4:0] $end
$var wire 32 ( D_instruction [31:0] $end
$var wire 1 ) D_Op $end
$var wire 32 * D_Immediate [31:0] $end
$var wire 1 + D_Ie $end
$var wire 7 , DM_static_out [6:0] $end
$var wire 7 - DM_static_in [6:0] $end
$var wire 32 . DM_result [31:0] $end
$var wire 5 / DM_rd [4:0] $end
$var wire 5 0 DM_r2 [4:0] $end
$var wire 5 1 DM_r1 [4:0] $end
$var wire 32 2 DM_operand2 [31:0] $end
$var wire 32 3 DM_operand1 [31:0] $end
$var wire 1 4 DM_We $end
$var wire 32 5 DM_Immediate [31:0] $end
$var wire 1 6 DM_Ie $end
$var wire 6 7 ALU_static_out [5:0] $end
$var wire 6 8 ALU_static_in [5:0] $end
$var wire 32 9 ALU_result [31:0] $end
$var wire 32 : ALU_operand2 [31:0] $end
$var wire 32 ; ALU_operand1 [31:0] $end
$var wire 1 < ALU_op $end
$var reg 32 = pc [31:0] $end
$scope module ALU_DM $end
$var wire 38 > in [37:0] $end
$var wire 38 ? out [37:0] $end
$var wire 1 " reset $end
$var wire 1 ! write $end
$var reg 38 @ data [37:0] $end
$upscope $end
$scope module Alu $end
$var wire 1 < ALU_op $end
$var wire 32 A ALU_operand1 [31:0] $end
$var wire 32 B ALU_operand2 [31:0] $end
$var wire 6 C ALU_static_in [5:0] $end
$var wire 6 D ALU_static_out [5:0] $end
$var wire 1 E zero $end
$var wire 32 F ALU_result [31:0] $end
$scope module ilu $end
$var wire 32 G operand1 [31:0] $end
$var wire 32 H operand2 [31:0] $end
$var wire 1 < operation $end
$var wire 1 E zero $end
$var wire 32 I result [31:0] $end
$upscope $end
$upscope $end
$scope module DM_ALU $end
$var wire 71 J in [70:0] $end
$var wire 71 K out [70:0] $end
$var wire 1 " reset $end
$var wire 1 ! write $end
$var reg 71 L data [70:0] $end
$upscope $end
$scope module D_DM $end
$var wire 50 M in [49:0] $end
$var wire 50 N out [49:0] $end
$var wire 1 " reset $end
$var wire 1 ! write $end
$var reg 50 O data [49:0] $end
$upscope $end
$scope module I_D $end
$var wire 32 P out [31:0] $end
$var wire 1 " reset $end
$var wire 1 ! write $end
$var wire 32 Q in [31:0] $end
$var reg 32 R data [31:0] $end
$upscope $end
$scope module decoder $end
$var wire 1 # D_We $end
$var wire 32 S D_instruction [31:0] $end
$var wire 1 ) D_op $end
$var wire 32 T D_immediate [31:0] $end
$var wire 5 U D_addr_rd [4:0] $end
$var wire 5 V D_addr_r2 [4:0] $end
$var wire 5 W D_addr_r1 [4:0] $end
$var wire 1 + D_Ie $end
$upscope $end
$scope module dm $end
$var wire 1 6 DM_Ie $end
$var wire 1 4 DM_We $end
$var wire 5 X DM_addr_r1 [4:0] $end
$var wire 5 Y DM_addr_r2 [4:0] $end
$var wire 5 Z DM_addr_rd [4:0] $end
$var wire 32 [ DM_immediate [31:0] $end
$var wire 32 \ DM_operand1 [31:0] $end
$var wire 32 ] DM_rd [31:0] $end
$var wire 7 ^ DM_static_in [6:0] $end
$var wire 7 _ DM_static_out [6:0] $end
$var wire 1 ! clk $end
$var wire 1 " reset $end
$var wire 32 ` data_out2 [31:0] $end
$var wire 32 a data_out1 [31:0] $end
$var wire 32 b DM_operand2 [31:0] $end
$scope module rbank $end
$var wire 5 c addr_in [4:0] $end
$var wire 5 d addr_out1 [4:0] $end
$var wire 5 e addr_out2 [4:0] $end
$var wire 1 ! clk $end
$var wire 32 f data_in [31:0] $end
$var wire 32 g data_out1 [31:0] $end
$var wire 32 h data_out2 [31:0] $end
$var wire 1 " reset $end
$var wire 1 4 write $end
$scope begin genblk1[0] $end
$scope module register $end
$var wire 32 i in [31:0] $end
$var wire 32 j out [31:0] $end
$var wire 1 " reset $end
$var wire 1 k write $end
$var reg 32 l data [31:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[1] $end
$scope module register $end
$var wire 32 m in [31:0] $end
$var wire 32 n out [31:0] $end
$var wire 1 " reset $end
$var wire 1 o write $end
$var reg 32 p data [31:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[2] $end
$scope module register $end
$var wire 32 q in [31:0] $end
$var wire 32 r out [31:0] $end
$var wire 1 " reset $end
$var wire 1 s write $end
$var reg 32 t data [31:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[3] $end
$scope module register $end
$var wire 32 u in [31:0] $end
$var wire 32 v out [31:0] $end
$var wire 1 " reset $end
$var wire 1 w write $end
$var reg 32 x data [31:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[4] $end
$scope module register $end
$var wire 32 y in [31:0] $end
$var wire 32 z out [31:0] $end
$var wire 1 " reset $end
$var wire 1 { write $end
$var reg 32 | data [31:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[5] $end
$scope module register $end
$var wire 32 } in [31:0] $end
$var wire 32 ~ out [31:0] $end
$var wire 1 " reset $end
$var wire 1 !" write $end
$var reg 32 "" data [31:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[6] $end
$scope module register $end
$var wire 32 #" in [31:0] $end
$var wire 32 $" out [31:0] $end
$var wire 1 " reset $end
$var wire 1 %" write $end
$var reg 32 &" data [31:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[7] $end
$scope module register $end
$var wire 32 '" in [31:0] $end
$var wire 32 (" out [31:0] $end
$var wire 1 " reset $end
$var wire 1 )" write $end
$var reg 32 *" data [31:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[8] $end
$scope module register $end
$var wire 32 +" in [31:0] $end
$var wire 32 ," out [31:0] $end
$var wire 1 " reset $end
$var wire 1 -" write $end
$var reg 32 ." data [31:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[9] $end
$scope module register $end
$var wire 32 /" in [31:0] $end
$var wire 32 0" out [31:0] $end
$var wire 1 " reset $end
$var wire 1 1" write $end
$var reg 32 2" data [31:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[10] $end
$scope module register $end
$var wire 32 3" in [31:0] $end
$var wire 32 4" out [31:0] $end
$var wire 1 " reset $end
$var wire 1 5" write $end
$var reg 32 6" data [31:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[11] $end
$scope module register $end
$var wire 32 7" in [31:0] $end
$var wire 32 8" out [31:0] $end
$var wire 1 " reset $end
$var wire 1 9" write $end
$var reg 32 :" data [31:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[12] $end
$scope module register $end
$var wire 32 ;" in [31:0] $end
$var wire 32 <" out [31:0] $end
$var wire 1 " reset $end
$var wire 1 =" write $end
$var reg 32 >" data [31:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[13] $end
$scope module register $end
$var wire 32 ?" in [31:0] $end
$var wire 32 @" out [31:0] $end
$var wire 1 " reset $end
$var wire 1 A" write $end
$var reg 32 B" data [31:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[14] $end
$scope module register $end
$var wire 32 C" in [31:0] $end
$var wire 32 D" out [31:0] $end
$var wire 1 " reset $end
$var wire 1 E" write $end
$var reg 32 F" data [31:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[15] $end
$scope module register $end
$var wire 32 G" in [31:0] $end
$var wire 32 H" out [31:0] $end
$var wire 1 " reset $end
$var wire 1 I" write $end
$var reg 32 J" data [31:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[16] $end
$scope module register $end
$var wire 32 K" in [31:0] $end
$var wire 32 L" out [31:0] $end
$var wire 1 " reset $end
$var wire 1 M" write $end
$var reg 32 N" data [31:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[17] $end
$scope module register $end
$var wire 32 O" in [31:0] $end
$var wire 32 P" out [31:0] $end
$var wire 1 " reset $end
$var wire 1 Q" write $end
$var reg 32 R" data [31:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[18] $end
$scope module register $end
$var wire 32 S" in [31:0] $end
$var wire 32 T" out [31:0] $end
$var wire 1 " reset $end
$var wire 1 U" write $end
$var reg 32 V" data [31:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[19] $end
$scope module register $end
$var wire 32 W" in [31:0] $end
$var wire 32 X" out [31:0] $end
$var wire 1 " reset $end
$var wire 1 Y" write $end
$var reg 32 Z" data [31:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[20] $end
$scope module register $end
$var wire 32 [" in [31:0] $end
$var wire 32 \" out [31:0] $end
$var wire 1 " reset $end
$var wire 1 ]" write $end
$var reg 32 ^" data [31:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[21] $end
$scope module register $end
$var wire 32 _" in [31:0] $end
$var wire 32 `" out [31:0] $end
$var wire 1 " reset $end
$var wire 1 a" write $end
$var reg 32 b" data [31:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[22] $end
$scope module register $end
$var wire 32 c" in [31:0] $end
$var wire 32 d" out [31:0] $end
$var wire 1 " reset $end
$var wire 1 e" write $end
$var reg 32 f" data [31:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[23] $end
$scope module register $end
$var wire 32 g" in [31:0] $end
$var wire 32 h" out [31:0] $end
$var wire 1 " reset $end
$var wire 1 i" write $end
$var reg 32 j" data [31:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[24] $end
$scope module register $end
$var wire 32 k" in [31:0] $end
$var wire 32 l" out [31:0] $end
$var wire 1 " reset $end
$var wire 1 m" write $end
$var reg 32 n" data [31:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[25] $end
$scope module register $end
$var wire 32 o" in [31:0] $end
$var wire 32 p" out [31:0] $end
$var wire 1 " reset $end
$var wire 1 q" write $end
$var reg 32 r" data [31:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[26] $end
$scope module register $end
$var wire 32 s" in [31:0] $end
$var wire 32 t" out [31:0] $end
$var wire 1 " reset $end
$var wire 1 u" write $end
$var reg 32 v" data [31:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[27] $end
$scope module register $end
$var wire 32 w" in [31:0] $end
$var wire 32 x" out [31:0] $end
$var wire 1 " reset $end
$var wire 1 y" write $end
$var reg 32 z" data [31:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[28] $end
$scope module register $end
$var wire 32 {" in [31:0] $end
$var wire 32 |" out [31:0] $end
$var wire 1 " reset $end
$var wire 1 }" write $end
$var reg 32 ~" data [31:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[29] $end
$scope module register $end
$var wire 32 !# in [31:0] $end
$var wire 32 "# out [31:0] $end
$var wire 1 " reset $end
$var wire 1 ## write $end
$var reg 32 $# data [31:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[30] $end
$scope module register $end
$var wire 32 %# in [31:0] $end
$var wire 32 &# out [31:0] $end
$var wire 1 " reset $end
$var wire 1 '# write $end
$var reg 32 (# data [31:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[31] $end
$scope module register $end
$var wire 32 )# in [31:0] $end
$var wire 32 *# out [31:0] $end
$var wire 1 " reset $end
$var wire 1 +# write $end
$var reg 32 ,# data [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module imem $end
$var wire 32 -# address [31:0] $end
$var wire 1 " reset $end
$var wire 32 .# instruction [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b100000000000010010011 .#
b1000000000000 -#
b0 ,#
0+#
b0 *#
b0 )#
b0 (#
0'#
b0 &#
b0 %#
b0 $#
0##
b0 "#
b0 !#
b0 ~"
0}"
b0 |"
b0 {"
b0 z"
0y"
b0 x"
b0 w"
b0 v"
0u"
b0 t"
b0 s"
b0 r"
0q"
b0 p"
b0 o"
b0 n"
0m"
b0 l"
b0 k"
b0 j"
0i"
b0 h"
b0 g"
b0 f"
0e"
b0 d"
b0 c"
b0 b"
0a"
b0 `"
b0 _"
b0 ^"
0]"
b0 \"
b0 ["
b0 Z"
0Y"
b0 X"
b0 W"
b0 V"
0U"
b0 T"
b0 S"
b0 R"
0Q"
b0 P"
b0 O"
b0 N"
0M"
b0 L"
b0 K"
b0 J"
0I"
b0 H"
b0 G"
b0 F"
0E"
b0 D"
b0 C"
b0 B"
0A"
b0 @"
b0 ?"
b0 >"
0="
b0 <"
b0 ;"
b0 :"
09"
b0 8"
b0 7"
b0 6"
05"
b0 4"
b0 3"
b0 2"
01"
b0 0"
b0 /"
b0 ."
0-"
b0 ,"
b0 +"
b0 *"
0)"
b0 ("
b0 '"
b0 &"
0%"
b0 $"
b0 #"
b0 ""
0!"
b0 ~
b0 }
b0 |
0{
b0 z
b0 y
b0 x
0w
b0 v
b0 u
b0 t
0s
b0 r
b0 q
b0 p
0o
b0 n
b0 m
b0 l
0k
b0 j
b0 i
b0 h
b0 g
b0 f
b0 e
b0 d
b0 c
b0 b
b0 a
b0 `
b0 _
b0 ^
b0 ]
b0 \
b0 [
b0 Z
b0 Y
b0 X
b0 W
b0 V
b0 U
b0 T
b0 S
b0 R
b100000000000010010011 Q
b0 P
b0 O
b0 N
b100000000000000001 M
b0 L
b0 K
b0 J
b0 I
b0 H
b0 G
b0 F
1E
b0 D
b0 C
b0 B
b0 A
b0 @
b0 ?
b0 >
b1000000000000 =
0<
b0 ;
b0 :
b0 9
b0 8
b0 7
06
b0 5
04
b0 3
b0 2
b0 1
b0 0
b0 /
b0 .
b0 -
b0 ,
1+
b0 *
0)
b0 (
b0 '
b0 &
b0 %
b100000000000010010011 $
1#
1"
0!
$end
#1
b1 &
b1 V
b1 %
b1 U
b1100001000000000011 M
b1 *
b1 T
b1 J
b1 ,
b1 _
b1 -
b1 ^
16
b100001000000010110011 $
b100001000000010110011 Q
b100001000000010110011 .#
b100000000000010010011 (
b100000000000010010011 P
b100000000000010010011 R
b100000000000010010011 S
b100000000000000001 N
b100000000000000001 O
b1000000000100 =
b1000000000100 -#
1!
0"
#2
0!
#3
b1 2
b1 b
b1000000000100001000000010110011 $
b1000000000100001000000010110011 Q
b1000000000100001000000010110011 .#
b1 >
b1 7
b1 D
b1 8
b1 C
b1000000000000000000000000000000000000011 J
b11 ,
b11 _
b11 -
b11 ^
b1 0
b1 Y
b1 e
b1 5
b1 [
b1 '
b1 W
b1000001000010000011 M
0+
b1000000001000 =
b1000000001000 -#
b1 K
b1 L
b1100001000000000011 N
b1100001000000000011 O
b100001000000010110011 (
b100001000000010110011 P
b100001000000010110011 R
b100001000000010110011 S
1!
#4
0!
#5
1)
b11 J
b0 2
b0 b
0E
b1 9
b1 F
b1 I
b10000000001000001000011000011 M
b10000000001 *
b10000000001 T
b1 1
b1 X
b1 d
06
b1000011 >
b11 7
b11 D
b11 8
b11 C
b1 :
b1 B
b1 H
14
b100001000000010110011 $
b100001000000010110011 Q
b100001000000010110011 .#
b1000000000100001000000010110011 (
b1000000000100001000000010110011 P
b1000000000100001000000010110011 R
b1000000000100001000000010110011 S
b1000001000010000011 N
b1000001000010000011 O
b1000000000000000000000000000000000000011 K
b1000000000000000000000000000000000000011 L
b1 ?
b1 @
b1000000001100 =
b1000000001100 -#
1!
#6
1k
0!
#7
1E
b11 >
b0 9
b0 F
b0 I
0)
b1 /
b1 Z
b1 c
b1 .
b1 ]
b1 f
b1 i
b1 m
b1 q
b1 u
b1 y
b1 }
b1 #"
b1 '"
b1 +"
b1 /"
b1 3"
b1 7"
b1 ;"
b1 ?"
b1 C"
b1 G"
b1 K"
b1 O"
b1 S"
b1 W"
b1 ["
b1 _"
b1 c"
b1 g"
b1 k"
b1 o"
b1 s"
b1 w"
b1 {"
b1 !#
b1 %#
b1 )#
b0 :
b0 B
b0 H
b1000011 J
b1000011 ,
b1000011 _
b1000011 -
b1000011 ^
b10000000001 5
b10000000001 [
b1000001000010000011 M
b1 *
b1 T
0k
b1000000010000 =
b1000000010000 -#
b1000011 ?
b1000011 @
b11 K
b11 L
b10000000001000001000011000011 N
b10000000001000001000011000011 O
b100001000000010110011 (
b100001000000010110011 P
b100001000000010110011 R
b100001000000010110011 S
1!
#8
b1 2
b1 b
b1 n
b1000000000000000000000000000000011000011 J
b1 3
b1 \
b1 a
b1 g
b1 `
b1 h
b1 p
1o
0!
#9
b1000000000000000000000000000000010000011 J
b11 ,
b11 _
b11 -
b11 ^
b1 5
b1 [
1<
b1 ;
b1 A
b1 G
b1 :
b1 B
b1 H
b0 .
b0 ]
b0 f
b0 i
b0 m
b0 q
b0 u
b0 y
b0 }
b0 #"
b0 '"
b0 +"
b0 /"
b0 3"
b0 7"
b0 ;"
b0 ?"
b0 C"
b0 G"
b0 K"
b0 O"
b0 S"
b0 W"
b0 ["
b0 _"
b0 c"
b0 g"
b0 k"
b0 o"
b0 s"
b0 w"
b0 {"
b0 !#
b0 %#
b0 )#
0o
b1000001000010000011 N
b1000001000010000011 O
b1000000000000000000000000000000011000011 K
b1000000000000000000000000000000011000011 L
b11 ?
b11 @
b1000000010100 =
b1000000010100 -#
1!
#10
b0 2
b0 b
b0 n
b11 J
b0 3
b0 \
b0 a
b0 g
b0 `
b0 h
b0 p
1o
0!
#11
0<
b0 ;
b0 A
b0 G
b0 :
b0 B
b0 H
0o
b1000000011000 =
b1000000011000 -#
b11 K
b11 L
1!
#12
1o
0!
#13
0o
b1000000011100 =
b1000000011100 -#
1!
#14
1o
0!
#15
0o
b1000000100000 =
b1000000100000 -#
1!
#16
1o
0!
#17
0o
b1000000100100 =
b1000000100100 -#
1!
#18
1o
0!
#19
0o
b1000000101000 =
b1000000101000 -#
1!
#20
1o
0!
#21
0o
b1000000101100 =
b1000000101100 -#
1!
#22
1o
0!
#23
b0 $
b0 Q
b0 .#
0o
b1000000110000 =
b1000000110000 -#
1!
#24
1o
0!
#25
b0 '
b0 W
b0 &
b0 V
b0 %
b0 U
b0 *
b0 T
b100000000000000001 M
1+
0o
b0 (
b0 P
b0 R
b0 S
b1000000110100 =
b1000000110100 -#
1!
#26
1o
0!
#27
b1 J
b1 ,
b1 _
b1 -
b1 ^
b0 1
b0 X
b0 d
b0 0
b0 Y
b0 e
16
b0 5
b0 [
0o
b1000000111000 =
b1000000111000 -#
b100000000000000001 N
b100000000000000001 O
1!
#28
1o
0!
#29
b1 >
b1 7
b1 D
b1 8
b1 C
0o
b1 K
b1 L
b1000000111100 =
b1000000111100 -#
1!
#30
1o
0!
#31
b0 /
b0 Z
b0 c
0o
b1000001000000 =
b1000001000000 -#
b1 ?
b1 @
1!
#32
1k
0!
#33
0k
b1000001000100 =
b1000001000100 -#
1!
#34
1k
0!
#35
0k
b1000001001000 =
b1000001001000 -#
1!
#36
1k
0!
#37
0k
b1000001001100 =
b1000001001100 -#
1!
#38
1k
0!
#39
0k
b1000001010000 =
b1000001010000 -#
1!
#40
1k
0!
#41
0k
b1000001010100 =
b1000001010100 -#
1!
#42
1k
0!
#43
0k
b1000001011000 =
b1000001011000 -#
1!
#44
1k
0!
#45
0k
b1000001011100 =
b1000001011100 -#
1!
#46
1k
0!
#47
0k
b1000001100000 =
b1000001100000 -#
1!
#48
1k
0!
#49
0k
b1000001100100 =
b1000001100100 -#
1!
#50
1k
0!
#51
0k
b1000001101000 =
b1000001101000 -#
1!
#52
1k
0!
#53
0k
b1000001101100 =
b1000001101100 -#
1!
#54
1k
0!
#55
0k
b1000001110000 =
b1000001110000 -#
1!
#56
1k
0!
#57
0k
b1000001110100 =
b1000001110100 -#
1!
#58
1k
0!
#59
0k
b1000001111000 =
b1000001111000 -#
1!
#60
1k
0!
#61
0k
b1000001111100 =
b1000001111100 -#
1!
#62
1k
0!
#63
0k
b1000010000000 =
b1000010000000 -#
1!
#64
1k
0!
#65
0k
b1000010000100 =
b1000010000100 -#
1!
#66
1k
0!
#67
0k
b1000010001000 =
b1000010001000 -#
1!
#68
1k
0!
#69
0k
b1000010001100 =
b1000010001100 -#
1!
#70
1k
0!
#71
0k
b1000010010000 =
b1000010010000 -#
1!
#72
1k
0!
#73
0k
b1000010010100 =
b1000010010100 -#
1!
#74
1k
0!
#75
0k
b1000010011000 =
b1000010011000 -#
1!
#76
1k
0!
#77
0k
b1000010011100 =
b1000010011100 -#
1!
#78
1k
0!
#79
0k
b1000010100000 =
b1000010100000 -#
1!
#80
1k
0!
#81
0k
b1000010100100 =
b1000010100100 -#
1!
#82
1k
0!
#83
0k
b1000010101000 =
b1000010101000 -#
1!
#84
1k
0!
#85
0k
b1000010101100 =
b1000010101100 -#
1!
#86
1k
0!
#87
0k
b1000010110000 =
b1000010110000 -#
1!
#88
1k
0!
#89
0k
b1000010110100 =
b1000010110100 -#
1!
#90
1k
0!
#91
0k
b1000010111000 =
b1000010111000 -#
1!
#92
1k
0!
#93
0k
b1000010111100 =
b1000010111100 -#
1!
#94
1k
0!
#95
0k
b1000011000000 =
b1000011000000 -#
1!
#96
1k
0!
#97
0k
b1000011000100 =
b1000011000100 -#
1!
#98
1k
0!
#99
0k
b1000011001000 =
b1000011001000 -#
1!
#100
1k
0!
#101
0k
b1000011001100 =
b1000011001100 -#
1!
#102
1k
0!
#103
0k
b1000011010000 =
b1000011010000 -#
1!
#104
1k
0!
#105
0k
b1000011010100 =
b1000011010100 -#
1!
#106
1k
0!
#107
0k
b1000011011000 =
b1000011011000 -#
1!
#108
1k
0!
#109
0k
b1000011011100 =
b1000011011100 -#
1!
#110
1k
0!
#111
0k
b1000011100000 =
b1000011100000 -#
1!
#112
1k
0!
#113
0k
b1000011100100 =
b1000011100100 -#
1!
#114
1k
0!
#115
0k
b1000011101000 =
b1000011101000 -#
1!
#116
1k
0!
#117
0k
b1000011101100 =
b1000011101100 -#
1!
#118
1k
0!
#119
0k
b1000011110000 =
b1000011110000 -#
1!
#120
1k
0!
#121
0k
b1000011110100 =
b1000011110100 -#
1!
#122
1k
0!
#123
0k
b1000011111000 =
b1000011111000 -#
1!
#124
1k
0!
#125
0k
b1000011111100 =
b1000011111100 -#
1!
#126
1k
0!
#127
0k
b1000100000000 =
b1000100000000 -#
1!
#128
1k
0!
#129
0k
b1000100000100 =
b1000100000100 -#
1!
#130
1k
0!
#131
0k
b1000100001000 =
b1000100001000 -#
1!
#132
1k
0!
#133
0k
b1000100001100 =
b1000100001100 -#
1!
#134
1k
0!
#135
0k
b1000100010000 =
b1000100010000 -#
1!
#136
1k
0!
#137
0k
b1000100010100 =
b1000100010100 -#
1!
#138
1k
0!
#139
0k
b1000100011000 =
b1000100011000 -#
1!
#140
1k
0!
#141
0k
b1000100011100 =
b1000100011100 -#
1!
#142
1k
0!
#143
0k
b1000100100000 =
b1000100100000 -#
1!
#144
1k
0!
#145
0k
b1000100100100 =
b1000100100100 -#
1!
#146
1k
0!
#147
0k
b1000100101000 =
b1000100101000 -#
1!
#148
1k
0!
#149
0k
b1000100101100 =
b1000100101100 -#
1!
#150
1k
0!
#151
0k
b1000100110000 =
b1000100110000 -#
1!
#152
1k
0!
#153
0k
b1000100110100 =
b1000100110100 -#
1!
#154
1k
0!
#155
0k
b1000100111000 =
b1000100111000 -#
1!
#156
1k
0!
#157
0k
b1000100111100 =
b1000100111100 -#
1!
#158
1k
0!
#159
0k
b1000101000000 =
b1000101000000 -#
1!
#160
1k
0!
#161
0k
b1000101000100 =
b1000101000100 -#
1!
#162
1k
0!
#163
0k
b1000101001000 =
b1000101001000 -#
1!
#164
1k
0!
#165
0k
b1000101001100 =
b1000101001100 -#
1!
#166
1k
0!
#167
0k
b1000101010000 =
b1000101010000 -#
1!
#168
1k
0!
#169
0k
b1000101010100 =
b1000101010100 -#
1!
#170
1k
0!
#171
0k
b1000101011000 =
b1000101011000 -#
1!
#172
1k
0!
#173
0k
b1000101011100 =
b1000101011100 -#
1!
#174
1k
0!
#175
0k
b1000101100000 =
b1000101100000 -#
1!
#176
1k
0!
#177
0k
b1000101100100 =
b1000101100100 -#
1!
#178
1k
0!
#179
0k
b1000101101000 =
b1000101101000 -#
1!
#180
1k
0!
#181
0k
b1000101101100 =
b1000101101100 -#
1!
#182
1k
0!
#183
0k
b1000101110000 =
b1000101110000 -#
1!
#184
1k
0!
#185
0k
b1000101110100 =
b1000101110100 -#
1!
#186
1k
0!
#187
0k
b1000101111000 =
b1000101111000 -#
1!
#188
1k
0!
#189
0k
b1000101111100 =
b1000101111100 -#
1!
#190
1k
0!
#191
0k
b1000110000000 =
b1000110000000 -#
1!
#192
1k
0!
#193
0k
b1000110000100 =
b1000110000100 -#
1!
#194
1k
0!
#195
0k
b1000110001000 =
b1000110001000 -#
1!
#196
1k
0!
#197
0k
b1000110001100 =
b1000110001100 -#
1!
#198
1k
0!
#199
0k
b1000110010000 =
b1000110010000 -#
1!
#200
1k
0!
#201
0k
b1000110010100 =
b1000110010100 -#
1!
#202
1k
0!
#203
0k
b1000110011000 =
b1000110011000 -#
1!
#204
1k
0!
#205
0k
b1000110011100 =
b1000110011100 -#
1!
#206
1k
0!
#207
0k
b1000110100000 =
b1000110100000 -#
1!
#208
1k
0!
#209
0k
b1000110100100 =
b1000110100100 -#
1!
#210
1k
0!
#211
0k
b1000110101000 =
b1000110101000 -#
1!
#212
1k
0!
#213
0k
b1000110101100 =
b1000110101100 -#
1!
#214
1k
0!
#215
0k
b1000110110000 =
b1000110110000 -#
1!
#216
1k
0!
#217
0k
b1000110110100 =
b1000110110100 -#
1!
#218
1k
0!
#219
0k
b1000110111000 =
b1000110111000 -#
1!
#220
1k
0!
#221
0k
b1000110111100 =
b1000110111100 -#
1!
#222
1k
0!
#223
0k
b1000111000000 =
b1000111000000 -#
1!
#224
1k
0!
#225
0k
b1000111000100 =
b1000111000100 -#
1!
#226
1k
0!
#227
0k
b1000111001000 =
b1000111001000 -#
1!
#228
1k
0!
#229
0k
b1000111001100 =
b1000111001100 -#
1!
#230
1k
0!
#231
0k
b1000111010000 =
b1000111010000 -#
1!
#232
1k
0!
#233
0k
b1000111010100 =
b1000111010100 -#
1!
#234
1k
0!
#235
0k
b1000111011000 =
b1000111011000 -#
1!
#236
1k
0!
#237
0k
b1000111011100 =
b1000111011100 -#
1!
#238
1k
0!
#239
0k
b1000111100000 =
b1000111100000 -#
1!
#240
1k
0!
#241
0k
b1000111100100 =
b1000111100100 -#
1!
#242
1k
0!
#243
0k
b1000111101000 =
b1000111101000 -#
1!
#244
1k
0!
#245
0k
b1000111101100 =
b1000111101100 -#
1!
#246
1k
0!
#247
0k
b1000111110000 =
b1000111110000 -#
1!
#248
1k
0!
#249
0k
b1000111110100 =
b1000111110100 -#
1!
#250
1k
0!
#251
0k
b1000111111000 =
b1000111111000 -#
1!
#252
1k
0!
#253
0k
b1000111111100 =
b1000111111100 -#
1!
#254
1k
0!
#255
0k
b1001000000000 =
b1001000000000 -#
1!
#256
1k
0!
#257
0k
b1001000000100 =
b1001000000100 -#
1!
#258
1k
0!
#259
0k
b1001000001000 =
b1001000001000 -#
1!
#260
1k
0!
#261
0k
b1001000001100 =
b1001000001100 -#
1!
#262
1k
0!
#263
0k
b1001000010000 =
b1001000010000 -#
1!
#264
1k
0!
#265
0k
b1001000010100 =
b1001000010100 -#
1!
#266
1k
0!
#267
0k
b1001000011000 =
b1001000011000 -#
1!
#268
1k
0!
#269
0k
b1001000011100 =
b1001000011100 -#
1!
#270
1k
0!
#271
0k
b1001000100000 =
b1001000100000 -#
1!
#272
1k
0!
#273
0k
b1001000100100 =
b1001000100100 -#
1!
#274
1k
0!
#275
0k
b1001000101000 =
b1001000101000 -#
1!
#276
1k
0!
#277
0k
b1001000101100 =
b1001000101100 -#
1!
#278
1k
0!
#279
0k
b1001000110000 =
b1001000110000 -#
1!
#280
1k
0!
#281
0k
b1001000110100 =
b1001000110100 -#
1!
#282
1k
0!
#283
0k
b1001000111000 =
b1001000111000 -#
1!
#284
1k
0!
#285
0k
b1001000111100 =
b1001000111100 -#
1!
#286
1k
0!
#287
0k
b1001001000000 =
b1001001000000 -#
1!
#288
1k
0!
#289
0k
b1001001000100 =
b1001001000100 -#
1!
#290
1k
0!
#291
0k
b1001001001000 =
b1001001001000 -#
1!
#292
1k
0!
#293
0k
b1001001001100 =
b1001001001100 -#
1!
#294
1k
0!
#295
0k
b1001001010000 =
b1001001010000 -#
1!
#296
1k
0!
#297
0k
b1001001010100 =
b1001001010100 -#
1!
#298
1k
0!
#299
0k
b1001001011000 =
b1001001011000 -#
1!
#300
1k
0!
#301
0k
b1001001011100 =
b1001001011100 -#
1!
#302
1k
0!
#303
0k
b1001001100000 =
b1001001100000 -#
1!
#304
1k
0!
#305
0k
b1001001100100 =
b1001001100100 -#
1!
#306
1k
0!
#307
0k
b1001001101000 =
b1001001101000 -#
1!
#308
1k
0!
#309
0k
b1001001101100 =
b1001001101100 -#
1!
#310
1k
0!
#311
0k
b1001001110000 =
b1001001110000 -#
1!
#312
1k
0!
#313
0k
b1001001110100 =
b1001001110100 -#
1!
#314
1k
0!
#315
0k
b1001001111000 =
b1001001111000 -#
1!
#316
1k
0!
#317
0k
b1001001111100 =
b1001001111100 -#
1!
#318
1k
0!
#319
0k
b1001010000000 =
b1001010000000 -#
1!
#320
1k
0!
#321
0k
b1001010000100 =
b1001010000100 -#
1!
#322
1k
0!
#323
0k
b1001010001000 =
b1001010001000 -#
1!
#324
1k
0!
#325
0k
b1001010001100 =
b1001010001100 -#
1!
#326
1k
0!
#327
0k
b1001010010000 =
b1001010010000 -#
1!
#328
1k
0!
#329
0k
b1001010010100 =
b1001010010100 -#
1!
#330
1k
0!
#331
0k
b1001010011000 =
b1001010011000 -#
1!
#332
1k
0!
#333
0k
b1001010011100 =
b1001010011100 -#
1!
#334
1k
0!
#335
0k
b1001010100000 =
b1001010100000 -#
1!
#336
1k
0!
#337
0k
b1001010100100 =
b1001010100100 -#
1!
#338
1k
0!
#339
0k
b1001010101000 =
b1001010101000 -#
1!
#340
1k
0!
#341
0k
b1001010101100 =
b1001010101100 -#
1!
#342
1k
0!
#343
0k
b1001010110000 =
b1001010110000 -#
1!
#344
1k
0!
#345
0k
b1001010110100 =
b1001010110100 -#
1!
#346
1k
0!
#347
0k
b1001010111000 =
b1001010111000 -#
1!
#348
1k
0!
#349
0k
b1001010111100 =
b1001010111100 -#
1!
#350
1k
0!
#351
0k
b1001011000000 =
b1001011000000 -#
1!
#352
1k
0!
#353
0k
b1001011000100 =
b1001011000100 -#
1!
#354
1k
0!
#355
0k
b1001011001000 =
b1001011001000 -#
1!
#356
1k
0!
#357
0k
b1001011001100 =
b1001011001100 -#
1!
#358
1k
0!
#359
0k
b1001011010000 =
b1001011010000 -#
1!
#360
1k
0!
#361
0k
b1001011010100 =
b1001011010100 -#
1!
#362
1k
0!
#363
0k
b1001011011000 =
b1001011011000 -#
1!
#364
1k
0!
#365
0k
b1001011011100 =
b1001011011100 -#
1!
#366
1k
0!
#367
0k
b1001011100000 =
b1001011100000 -#
1!
#368
1k
0!
#369
0k
b1001011100100 =
b1001011100100 -#
1!
#370
1k
0!
#371
0k
b1001011101000 =
b1001011101000 -#
1!
#372
1k
0!
#373
0k
b1001011101100 =
b1001011101100 -#
1!
#374
1k
0!
#375
0k
b1001011110000 =
b1001011110000 -#
1!
#376
1k
0!
#377
0k
b1001011110100 =
b1001011110100 -#
1!
#378
1k
0!
#379
0k
b1001011111000 =
b1001011111000 -#
1!
#380
1k
0!
#381
0k
b1001011111100 =
b1001011111100 -#
1!
#382
1k
0!
#383
0k
b1001100000000 =
b1001100000000 -#
1!
#384
1k
0!
#385
0k
b1001100000100 =
b1001100000100 -#
1!
#386
1k
0!
#387
0k
b1001100001000 =
b1001100001000 -#
1!
#388
1k
0!
#389
0k
b1001100001100 =
b1001100001100 -#
1!
#390
1k
0!
#391
0k
b1001100010000 =
b1001100010000 -#
1!
#392
1k
0!
#393
0k
b1001100010100 =
b1001100010100 -#
1!
#394
1k
0!
#395
0k
b1001100011000 =
b1001100011000 -#
1!
#396
1k
0!
#397
0k
b1001100011100 =
b1001100011100 -#
1!
#398
1k
0!
#399
0k
b1001100100000 =
b1001100100000 -#
1!
#400
1k
0!
#401
0k
b1001100100100 =
b1001100100100 -#
1!
