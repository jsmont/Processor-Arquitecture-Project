$date
	Mon Jan 15 01:11:31 2018
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module test $end
$var wire 8 ! data_out2 [7:0] $end
$var wire 8 " data_out1 [7:0] $end
$var reg 5 # addr_in [4:0] $end
$var reg 5 $ addr_out1 [4:0] $end
$var reg 5 % addr_out2 [4:0] $end
$var reg 1 & clk $end
$var reg 8 ' data_in [7:0] $end
$var reg 1 ( reset $end
$var reg 1 ) write $end
$var integer 32 * i [31:0] $end
$scope module rbank $end
$var wire 5 + addr_in [4:0] $end
$var wire 5 , addr_out1 [4:0] $end
$var wire 5 - addr_out2 [4:0] $end
$var wire 1 & clk $end
$var wire 8 . data_in [7:0] $end
$var wire 8 / data_out1 [7:0] $end
$var wire 8 0 data_out2 [7:0] $end
$var wire 1 ( reset $end
$var wire 1 ) write $end
$scope begin genblk1[0] $end
$scope module register $end
$var wire 1 1 erase $end
$var wire 8 2 in [7:0] $end
$var wire 8 3 out [7:0] $end
$var wire 1 ( reset $end
$var wire 1 4 stall $end
$var wire 1 5 write $end
$var reg 8 6 data [7:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[1] $end
$scope module register $end
$var wire 1 7 erase $end
$var wire 8 8 in [7:0] $end
$var wire 8 9 out [7:0] $end
$var wire 1 ( reset $end
$var wire 1 : stall $end
$var wire 1 ; write $end
$var reg 8 < data [7:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[2] $end
$scope module register $end
$var wire 1 = erase $end
$var wire 8 > in [7:0] $end
$var wire 8 ? out [7:0] $end
$var wire 1 ( reset $end
$var wire 1 @ stall $end
$var wire 1 A write $end
$var reg 8 B data [7:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[3] $end
$scope module register $end
$var wire 1 C erase $end
$var wire 8 D in [7:0] $end
$var wire 8 E out [7:0] $end
$var wire 1 ( reset $end
$var wire 1 F stall $end
$var wire 1 G write $end
$var reg 8 H data [7:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[4] $end
$scope module register $end
$var wire 1 I erase $end
$var wire 8 J in [7:0] $end
$var wire 8 K out [7:0] $end
$var wire 1 ( reset $end
$var wire 1 L stall $end
$var wire 1 M write $end
$var reg 8 N data [7:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[5] $end
$scope module register $end
$var wire 1 O erase $end
$var wire 8 P in [7:0] $end
$var wire 8 Q out [7:0] $end
$var wire 1 ( reset $end
$var wire 1 R stall $end
$var wire 1 S write $end
$var reg 8 T data [7:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[6] $end
$scope module register $end
$var wire 1 U erase $end
$var wire 8 V in [7:0] $end
$var wire 8 W out [7:0] $end
$var wire 1 ( reset $end
$var wire 1 X stall $end
$var wire 1 Y write $end
$var reg 8 Z data [7:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[7] $end
$scope module register $end
$var wire 1 [ erase $end
$var wire 8 \ in [7:0] $end
$var wire 8 ] out [7:0] $end
$var wire 1 ( reset $end
$var wire 1 ^ stall $end
$var wire 1 _ write $end
$var reg 8 ` data [7:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[8] $end
$scope module register $end
$var wire 1 a erase $end
$var wire 8 b in [7:0] $end
$var wire 8 c out [7:0] $end
$var wire 1 ( reset $end
$var wire 1 d stall $end
$var wire 1 e write $end
$var reg 8 f data [7:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[9] $end
$scope module register $end
$var wire 1 g erase $end
$var wire 8 h in [7:0] $end
$var wire 8 i out [7:0] $end
$var wire 1 ( reset $end
$var wire 1 j stall $end
$var wire 1 k write $end
$var reg 8 l data [7:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[10] $end
$scope module register $end
$var wire 1 m erase $end
$var wire 8 n in [7:0] $end
$var wire 8 o out [7:0] $end
$var wire 1 ( reset $end
$var wire 1 p stall $end
$var wire 1 q write $end
$var reg 8 r data [7:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[11] $end
$scope module register $end
$var wire 1 s erase $end
$var wire 8 t in [7:0] $end
$var wire 8 u out [7:0] $end
$var wire 1 ( reset $end
$var wire 1 v stall $end
$var wire 1 w write $end
$var reg 8 x data [7:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[12] $end
$scope module register $end
$var wire 1 y erase $end
$var wire 8 z in [7:0] $end
$var wire 8 { out [7:0] $end
$var wire 1 ( reset $end
$var wire 1 | stall $end
$var wire 1 } write $end
$var reg 8 ~ data [7:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[13] $end
$scope module register $end
$var wire 1 !" erase $end
$var wire 8 "" in [7:0] $end
$var wire 8 #" out [7:0] $end
$var wire 1 ( reset $end
$var wire 1 $" stall $end
$var wire 1 %" write $end
$var reg 8 &" data [7:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[14] $end
$scope module register $end
$var wire 1 '" erase $end
$var wire 8 (" in [7:0] $end
$var wire 8 )" out [7:0] $end
$var wire 1 ( reset $end
$var wire 1 *" stall $end
$var wire 1 +" write $end
$var reg 8 ," data [7:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[15] $end
$scope module register $end
$var wire 1 -" erase $end
$var wire 8 ." in [7:0] $end
$var wire 8 /" out [7:0] $end
$var wire 1 ( reset $end
$var wire 1 0" stall $end
$var wire 1 1" write $end
$var reg 8 2" data [7:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[16] $end
$scope module register $end
$var wire 1 3" erase $end
$var wire 8 4" in [7:0] $end
$var wire 8 5" out [7:0] $end
$var wire 1 ( reset $end
$var wire 1 6" stall $end
$var wire 1 7" write $end
$var reg 8 8" data [7:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[17] $end
$scope module register $end
$var wire 1 9" erase $end
$var wire 8 :" in [7:0] $end
$var wire 8 ;" out [7:0] $end
$var wire 1 ( reset $end
$var wire 1 <" stall $end
$var wire 1 =" write $end
$var reg 8 >" data [7:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[18] $end
$scope module register $end
$var wire 1 ?" erase $end
$var wire 8 @" in [7:0] $end
$var wire 8 A" out [7:0] $end
$var wire 1 ( reset $end
$var wire 1 B" stall $end
$var wire 1 C" write $end
$var reg 8 D" data [7:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[19] $end
$scope module register $end
$var wire 1 E" erase $end
$var wire 8 F" in [7:0] $end
$var wire 8 G" out [7:0] $end
$var wire 1 ( reset $end
$var wire 1 H" stall $end
$var wire 1 I" write $end
$var reg 8 J" data [7:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[20] $end
$scope module register $end
$var wire 1 K" erase $end
$var wire 8 L" in [7:0] $end
$var wire 8 M" out [7:0] $end
$var wire 1 ( reset $end
$var wire 1 N" stall $end
$var wire 1 O" write $end
$var reg 8 P" data [7:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[21] $end
$scope module register $end
$var wire 1 Q" erase $end
$var wire 8 R" in [7:0] $end
$var wire 8 S" out [7:0] $end
$var wire 1 ( reset $end
$var wire 1 T" stall $end
$var wire 1 U" write $end
$var reg 8 V" data [7:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[22] $end
$scope module register $end
$var wire 1 W" erase $end
$var wire 8 X" in [7:0] $end
$var wire 8 Y" out [7:0] $end
$var wire 1 ( reset $end
$var wire 1 Z" stall $end
$var wire 1 [" write $end
$var reg 8 \" data [7:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[23] $end
$scope module register $end
$var wire 1 ]" erase $end
$var wire 8 ^" in [7:0] $end
$var wire 8 _" out [7:0] $end
$var wire 1 ( reset $end
$var wire 1 `" stall $end
$var wire 1 a" write $end
$var reg 8 b" data [7:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[24] $end
$scope module register $end
$var wire 1 c" erase $end
$var wire 8 d" in [7:0] $end
$var wire 8 e" out [7:0] $end
$var wire 1 ( reset $end
$var wire 1 f" stall $end
$var wire 1 g" write $end
$var reg 8 h" data [7:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[25] $end
$scope module register $end
$var wire 1 i" erase $end
$var wire 8 j" in [7:0] $end
$var wire 8 k" out [7:0] $end
$var wire 1 ( reset $end
$var wire 1 l" stall $end
$var wire 1 m" write $end
$var reg 8 n" data [7:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[26] $end
$scope module register $end
$var wire 1 o" erase $end
$var wire 8 p" in [7:0] $end
$var wire 8 q" out [7:0] $end
$var wire 1 ( reset $end
$var wire 1 r" stall $end
$var wire 1 s" write $end
$var reg 8 t" data [7:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[27] $end
$scope module register $end
$var wire 1 u" erase $end
$var wire 8 v" in [7:0] $end
$var wire 8 w" out [7:0] $end
$var wire 1 ( reset $end
$var wire 1 x" stall $end
$var wire 1 y" write $end
$var reg 8 z" data [7:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[28] $end
$scope module register $end
$var wire 1 {" erase $end
$var wire 8 |" in [7:0] $end
$var wire 8 }" out [7:0] $end
$var wire 1 ( reset $end
$var wire 1 ~" stall $end
$var wire 1 !# write $end
$var reg 8 "# data [7:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[29] $end
$scope module register $end
$var wire 1 ## erase $end
$var wire 8 $# in [7:0] $end
$var wire 8 %# out [7:0] $end
$var wire 1 ( reset $end
$var wire 1 &# stall $end
$var wire 1 '# write $end
$var reg 8 (# data [7:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[30] $end
$scope module register $end
$var wire 1 )# erase $end
$var wire 8 *# in [7:0] $end
$var wire 8 +# out [7:0] $end
$var wire 1 ( reset $end
$var wire 1 ,# stall $end
$var wire 1 -# write $end
$var reg 8 .# data [7:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[31] $end
$scope module register $end
$var wire 1 /# erase $end
$var wire 8 0# in [7:0] $end
$var wire 8 1# out [7:0] $end
$var wire 1 ( reset $end
$var wire 1 2# stall $end
$var wire 1 3# write $end
$var reg 8 4# data [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 4#
03#
02#
b0 1#
b1 0#
0/#
b0 .#
0-#
0,#
b0 +#
b1 *#
0)#
b0 (#
0'#
0&#
b0 %#
b1 $#
0##
b0 "#
0!#
0~"
b0 }"
b1 |"
0{"
b0 z"
0y"
0x"
b0 w"
b1 v"
0u"
b0 t"
0s"
0r"
b0 q"
b1 p"
0o"
b0 n"
0m"
0l"
b0 k"
b1 j"
0i"
b0 h"
0g"
0f"
b0 e"
b1 d"
0c"
b0 b"
0a"
0`"
b0 _"
b1 ^"
0]"
b0 \"
0["
0Z"
b0 Y"
b1 X"
0W"
b0 V"
0U"
0T"
b0 S"
b1 R"
0Q"
b0 P"
0O"
0N"
b0 M"
b1 L"
0K"
b0 J"
0I"
0H"
b0 G"
b1 F"
0E"
b0 D"
0C"
0B"
b0 A"
b1 @"
0?"
b0 >"
0="
0<"
b0 ;"
b1 :"
09"
b0 8"
07"
06"
b0 5"
b1 4"
03"
b0 2"
01"
00"
b0 /"
b1 ."
0-"
b0 ,"
0+"
0*"
b0 )"
b1 ("
0'"
b0 &"
0%"
0$"
b0 #"
b1 ""
0!"
b0 ~
0}
0|
b0 {
b1 z
0y
b0 x
0w
0v
b0 u
b1 t
0s
b0 r
0q
0p
b0 o
b1 n
0m
b0 l
0k
0j
b0 i
b1 h
0g
b0 f
0e
0d
b0 c
b1 b
0a
b0 `
0_
0^
b0 ]
b1 \
0[
b0 Z
0Y
0X
b0 W
b1 V
0U
b0 T
0S
0R
b0 Q
b1 P
0O
b0 N
0M
0L
b0 K
b1 J
0I
b0 H
0G
0F
b0 E
b1 D
0C
b0 B
0A
0@
b0 ?
b1 >
0=
b0 <
0;
0:
b0 9
b1 8
07
b0 6
15
04
b0 3
b1 2
01
b0 0
b0 /
b1 .
b0 -
b0 ,
b0 +
bx *
1)
1(
b1 '
0&
b0 %
b0 $
b0 #
b0 "
b0 !
$end
#1
b1 3
b1 "
b1 /
b1 !
b1 0
b1 6
#5
05
1;
b0 *
b0 "
b0 /
b1 $
b1 ,
b1 #
b1 +
#6
b1 9
b1 "
b1 /
b1 <
#10
0;
1&
#20
1;
0&
#25
0;
1A
b1 *
b1 %
b1 -
b0 "
b0 /
b10 $
b10 ,
b0 '
b0 .
b0 2
b0 8
b0 >
b0 D
b0 J
b0 P
b0 V
b0 \
b0 b
b0 h
b0 n
b0 t
b0 z
b0 ""
b0 ("
b0 ."
b0 4"
b0 :"
b0 @"
b0 F"
b0 L"
b0 R"
b0 X"
b0 ^"
b0 d"
b0 j"
b0 p"
b0 v"
b0 |"
b0 $#
b0 *#
b0 0#
b10 #
b10 +
#30
0A
1&
#40
1A
0&
#45
0A
1G
b10 *
b0 !
b0 0
b10 %
b10 -
b11 $
b11 ,
b1 '
b1 .
b1 2
b1 8
b1 >
b1 D
b1 J
b1 P
b1 V
b1 \
b1 b
b1 h
b1 n
b1 t
b1 z
b1 ""
b1 ("
b1 ."
b1 4"
b1 :"
b1 @"
b1 F"
b1 L"
b1 R"
b1 X"
b1 ^"
b1 d"
b1 j"
b1 p"
b1 v"
b1 |"
b1 $#
b1 *#
b1 0#
b11 #
b11 +
#46
b1 E
b1 "
b1 /
b1 H
#50
0G
1&
#60
1G
0&
#65
0G
1M
b11 *
b1 !
b1 0
b11 %
b11 -
b0 "
b0 /
b100 $
b100 ,
b10 '
b10 .
b10 2
b10 8
b10 >
b10 D
b10 J
b10 P
b10 V
b10 \
b10 b
b10 h
b10 n
b10 t
b10 z
b10 ""
b10 ("
b10 ."
b10 4"
b10 :"
b10 @"
b10 F"
b10 L"
b10 R"
b10 X"
b10 ^"
b10 d"
b10 j"
b10 p"
b10 v"
b10 |"
b10 $#
b10 *#
b10 0#
b100 #
b100 +
#66
b10 K
b10 "
b10 /
b10 N
#70
0M
1&
#80
1M
0&
#85
0M
1S
b100 *
b10 !
b10 0
b100 %
b100 -
b0 "
b0 /
b101 $
b101 ,
b11 '
b11 .
b11 2
b11 8
b11 >
b11 D
b11 J
b11 P
b11 V
b11 \
b11 b
b11 h
b11 n
b11 t
b11 z
b11 ""
b11 ("
b11 ."
b11 4"
b11 :"
b11 @"
b11 F"
b11 L"
b11 R"
b11 X"
b11 ^"
b11 d"
b11 j"
b11 p"
b11 v"
b11 |"
b11 $#
b11 *#
b11 0#
b101 #
b101 +
#86
b11 Q
b11 "
b11 /
b11 T
#90
0S
1&
#100
1S
0&
#105
0S
1Y
b101 *
b11 !
b11 0
b101 %
b101 -
b0 "
b0 /
b110 $
b110 ,
b100 '
b100 .
b100 2
b100 8
b100 >
b100 D
b100 J
b100 P
b100 V
b100 \
b100 b
b100 h
b100 n
b100 t
b100 z
b100 ""
b100 ("
b100 ."
b100 4"
b100 :"
b100 @"
b100 F"
b100 L"
b100 R"
b100 X"
b100 ^"
b100 d"
b100 j"
b100 p"
b100 v"
b100 |"
b100 $#
b100 *#
b100 0#
b110 #
b110 +
#106
b100 W
b100 "
b100 /
b100 Z
#110
0Y
1&
#120
1Y
0&
#125
0Y
1_
b110 *
b100 !
b100 0
b110 %
b110 -
b0 "
b0 /
b111 $
b111 ,
b101 '
b101 .
b101 2
b101 8
b101 >
b101 D
b101 J
b101 P
b101 V
b101 \
b101 b
b101 h
b101 n
b101 t
b101 z
b101 ""
b101 ("
b101 ."
b101 4"
b101 :"
b101 @"
b101 F"
b101 L"
b101 R"
b101 X"
b101 ^"
b101 d"
b101 j"
b101 p"
b101 v"
b101 |"
b101 $#
b101 *#
b101 0#
b111 #
b111 +
#126
b101 ]
b101 "
b101 /
b101 `
#130
0_
1&
#140
1_
0&
#145
0_
1e
b111 *
b101 !
b101 0
b111 %
b111 -
b0 "
b0 /
b1000 $
b1000 ,
b110 '
b110 .
b110 2
b110 8
b110 >
b110 D
b110 J
b110 P
b110 V
b110 \
b110 b
b110 h
b110 n
b110 t
b110 z
b110 ""
b110 ("
b110 ."
b110 4"
b110 :"
b110 @"
b110 F"
b110 L"
b110 R"
b110 X"
b110 ^"
b110 d"
b110 j"
b110 p"
b110 v"
b110 |"
b110 $#
b110 *#
b110 0#
b1000 #
b1000 +
#146
b110 c
b110 "
b110 /
b110 f
#150
0e
1&
#160
1e
0&
#165
0e
1k
b1000 *
b110 !
b110 0
b1000 %
b1000 -
b0 "
b0 /
b1001 $
b1001 ,
b111 '
b111 .
b111 2
b111 8
b111 >
b111 D
b111 J
b111 P
b111 V
b111 \
b111 b
b111 h
b111 n
b111 t
b111 z
b111 ""
b111 ("
b111 ."
b111 4"
b111 :"
b111 @"
b111 F"
b111 L"
b111 R"
b111 X"
b111 ^"
b111 d"
b111 j"
b111 p"
b111 v"
b111 |"
b111 $#
b111 *#
b111 0#
b1001 #
b1001 +
#166
b111 i
b111 "
b111 /
b111 l
#170
0k
1&
#180
1k
0&
#185
0k
1q
b1001 *
b111 !
b111 0
b1001 %
b1001 -
b0 "
b0 /
b1010 $
b1010 ,
b1000 '
b1000 .
b1000 2
b1000 8
b1000 >
b1000 D
b1000 J
b1000 P
b1000 V
b1000 \
b1000 b
b1000 h
b1000 n
b1000 t
b1000 z
b1000 ""
b1000 ("
b1000 ."
b1000 4"
b1000 :"
b1000 @"
b1000 F"
b1000 L"
b1000 R"
b1000 X"
b1000 ^"
b1000 d"
b1000 j"
b1000 p"
b1000 v"
b1000 |"
b1000 $#
b1000 *#
b1000 0#
b1010 #
b1010 +
#186
b1000 o
b1000 "
b1000 /
b1000 r
#190
0q
1&
#200
1q
0&
#205
0q
1w
b1010 *
b1000 !
b1000 0
b1010 %
b1010 -
b0 "
b0 /
b1011 $
b1011 ,
b1001 '
b1001 .
b1001 2
b1001 8
b1001 >
b1001 D
b1001 J
b1001 P
b1001 V
b1001 \
b1001 b
b1001 h
b1001 n
b1001 t
b1001 z
b1001 ""
b1001 ("
b1001 ."
b1001 4"
b1001 :"
b1001 @"
b1001 F"
b1001 L"
b1001 R"
b1001 X"
b1001 ^"
b1001 d"
b1001 j"
b1001 p"
b1001 v"
b1001 |"
b1001 $#
b1001 *#
b1001 0#
b1011 #
b1011 +
#206
b1001 u
b1001 "
b1001 /
b1001 x
#210
0w
1&
#220
1w
0&
#225
0w
1}
b1011 *
b1001 !
b1001 0
b1011 %
b1011 -
b0 "
b0 /
b1100 $
b1100 ,
b1010 '
b1010 .
b1010 2
b1010 8
b1010 >
b1010 D
b1010 J
b1010 P
b1010 V
b1010 \
b1010 b
b1010 h
b1010 n
b1010 t
b1010 z
b1010 ""
b1010 ("
b1010 ."
b1010 4"
b1010 :"
b1010 @"
b1010 F"
b1010 L"
b1010 R"
b1010 X"
b1010 ^"
b1010 d"
b1010 j"
b1010 p"
b1010 v"
b1010 |"
b1010 $#
b1010 *#
b1010 0#
b1100 #
b1100 +
#226
b1010 {
b1010 "
b1010 /
b1010 ~
#230
0}
1&
#240
1}
0&
#245
0}
1%"
b1100 *
b1010 !
b1010 0
b1100 %
b1100 -
b0 "
b0 /
b1101 $
b1101 ,
b1011 '
b1011 .
b1011 2
b1011 8
b1011 >
b1011 D
b1011 J
b1011 P
b1011 V
b1011 \
b1011 b
b1011 h
b1011 n
b1011 t
b1011 z
b1011 ""
b1011 ("
b1011 ."
b1011 4"
b1011 :"
b1011 @"
b1011 F"
b1011 L"
b1011 R"
b1011 X"
b1011 ^"
b1011 d"
b1011 j"
b1011 p"
b1011 v"
b1011 |"
b1011 $#
b1011 *#
b1011 0#
b1101 #
b1101 +
#246
b1011 #"
b1011 "
b1011 /
b1011 &"
#250
0%"
1&
#260
1%"
0&
#265
0%"
1+"
b1101 *
b1011 !
b1011 0
b1101 %
b1101 -
b0 "
b0 /
b1110 $
b1110 ,
b1100 '
b1100 .
b1100 2
b1100 8
b1100 >
b1100 D
b1100 J
b1100 P
b1100 V
b1100 \
b1100 b
b1100 h
b1100 n
b1100 t
b1100 z
b1100 ""
b1100 ("
b1100 ."
b1100 4"
b1100 :"
b1100 @"
b1100 F"
b1100 L"
b1100 R"
b1100 X"
b1100 ^"
b1100 d"
b1100 j"
b1100 p"
b1100 v"
b1100 |"
b1100 $#
b1100 *#
b1100 0#
b1110 #
b1110 +
#266
b1100 )"
b1100 "
b1100 /
b1100 ,"
#270
0+"
1&
#280
1+"
0&
#285
0+"
11"
b1110 *
b1100 !
b1100 0
b1110 %
b1110 -
b0 "
b0 /
b1111 $
b1111 ,
b1101 '
b1101 .
b1101 2
b1101 8
b1101 >
b1101 D
b1101 J
b1101 P
b1101 V
b1101 \
b1101 b
b1101 h
b1101 n
b1101 t
b1101 z
b1101 ""
b1101 ("
b1101 ."
b1101 4"
b1101 :"
b1101 @"
b1101 F"
b1101 L"
b1101 R"
b1101 X"
b1101 ^"
b1101 d"
b1101 j"
b1101 p"
b1101 v"
b1101 |"
b1101 $#
b1101 *#
b1101 0#
b1111 #
b1111 +
#286
b1101 /"
b1101 "
b1101 /
b1101 2"
#290
01"
1&
#300
11"
0&
#305
01"
17"
b1111 *
b1101 !
b1101 0
b1111 %
b1111 -
b0 "
b0 /
b10000 $
b10000 ,
b1110 '
b1110 .
b1110 2
b1110 8
b1110 >
b1110 D
b1110 J
b1110 P
b1110 V
b1110 \
b1110 b
b1110 h
b1110 n
b1110 t
b1110 z
b1110 ""
b1110 ("
b1110 ."
b1110 4"
b1110 :"
b1110 @"
b1110 F"
b1110 L"
b1110 R"
b1110 X"
b1110 ^"
b1110 d"
b1110 j"
b1110 p"
b1110 v"
b1110 |"
b1110 $#
b1110 *#
b1110 0#
b10000 #
b10000 +
#306
b1110 5"
b1110 "
b1110 /
b1110 8"
#310
07"
1&
#320
17"
0&
#325
07"
1="
b10000 *
b1110 !
b1110 0
b10000 %
b10000 -
b0 "
b0 /
b10001 $
b10001 ,
b1111 '
b1111 .
b1111 2
b1111 8
b1111 >
b1111 D
b1111 J
b1111 P
b1111 V
b1111 \
b1111 b
b1111 h
b1111 n
b1111 t
b1111 z
b1111 ""
b1111 ("
b1111 ."
b1111 4"
b1111 :"
b1111 @"
b1111 F"
b1111 L"
b1111 R"
b1111 X"
b1111 ^"
b1111 d"
b1111 j"
b1111 p"
b1111 v"
b1111 |"
b1111 $#
b1111 *#
b1111 0#
b10001 #
b10001 +
#326
b1111 ;"
b1111 "
b1111 /
b1111 >"
#330
0="
1&
#340
1="
0&
#345
0="
1C"
b10001 *
b1111 !
b1111 0
b10001 %
b10001 -
b0 "
b0 /
b10010 $
b10010 ,
b10000 '
b10000 .
b10000 2
b10000 8
b10000 >
b10000 D
b10000 J
b10000 P
b10000 V
b10000 \
b10000 b
b10000 h
b10000 n
b10000 t
b10000 z
b10000 ""
b10000 ("
b10000 ."
b10000 4"
b10000 :"
b10000 @"
b10000 F"
b10000 L"
b10000 R"
b10000 X"
b10000 ^"
b10000 d"
b10000 j"
b10000 p"
b10000 v"
b10000 |"
b10000 $#
b10000 *#
b10000 0#
b10010 #
b10010 +
#346
b10000 A"
b10000 "
b10000 /
b10000 D"
#350
0C"
1&
#360
1C"
0&
#365
0C"
1I"
b10010 *
b10000 !
b10000 0
b10010 %
b10010 -
b0 "
b0 /
b10011 $
b10011 ,
b10001 '
b10001 .
b10001 2
b10001 8
b10001 >
b10001 D
b10001 J
b10001 P
b10001 V
b10001 \
b10001 b
b10001 h
b10001 n
b10001 t
b10001 z
b10001 ""
b10001 ("
b10001 ."
b10001 4"
b10001 :"
b10001 @"
b10001 F"
b10001 L"
b10001 R"
b10001 X"
b10001 ^"
b10001 d"
b10001 j"
b10001 p"
b10001 v"
b10001 |"
b10001 $#
b10001 *#
b10001 0#
b10011 #
b10011 +
#366
b10001 G"
b10001 "
b10001 /
b10001 J"
#370
0I"
1&
#380
1I"
0&
#385
0I"
1O"
b10011 *
b10001 !
b10001 0
b10011 %
b10011 -
b0 "
b0 /
b10100 $
b10100 ,
b10010 '
b10010 .
b10010 2
b10010 8
b10010 >
b10010 D
b10010 J
b10010 P
b10010 V
b10010 \
b10010 b
b10010 h
b10010 n
b10010 t
b10010 z
b10010 ""
b10010 ("
b10010 ."
b10010 4"
b10010 :"
b10010 @"
b10010 F"
b10010 L"
b10010 R"
b10010 X"
b10010 ^"
b10010 d"
b10010 j"
b10010 p"
b10010 v"
b10010 |"
b10010 $#
b10010 *#
b10010 0#
b10100 #
b10100 +
#386
b10010 M"
b10010 "
b10010 /
b10010 P"
#390
0O"
1&
#400
1O"
0&
#405
0O"
1U"
b10100 *
b10010 !
b10010 0
b10100 %
b10100 -
b0 "
b0 /
b10101 $
b10101 ,
b10011 '
b10011 .
b10011 2
b10011 8
b10011 >
b10011 D
b10011 J
b10011 P
b10011 V
b10011 \
b10011 b
b10011 h
b10011 n
b10011 t
b10011 z
b10011 ""
b10011 ("
b10011 ."
b10011 4"
b10011 :"
b10011 @"
b10011 F"
b10011 L"
b10011 R"
b10011 X"
b10011 ^"
b10011 d"
b10011 j"
b10011 p"
b10011 v"
b10011 |"
b10011 $#
b10011 *#
b10011 0#
b10101 #
b10101 +
#406
b10011 S"
b10011 "
b10011 /
b10011 V"
#410
0U"
1&
#420
1U"
0&
#425
0U"
1["
b10101 *
b10011 !
b10011 0
b10101 %
b10101 -
b0 "
b0 /
b10110 $
b10110 ,
b10100 '
b10100 .
b10100 2
b10100 8
b10100 >
b10100 D
b10100 J
b10100 P
b10100 V
b10100 \
b10100 b
b10100 h
b10100 n
b10100 t
b10100 z
b10100 ""
b10100 ("
b10100 ."
b10100 4"
b10100 :"
b10100 @"
b10100 F"
b10100 L"
b10100 R"
b10100 X"
b10100 ^"
b10100 d"
b10100 j"
b10100 p"
b10100 v"
b10100 |"
b10100 $#
b10100 *#
b10100 0#
b10110 #
b10110 +
#426
b10100 Y"
b10100 "
b10100 /
b10100 \"
#430
0["
1&
#440
1["
0&
#445
0["
1a"
b10110 *
b10100 !
b10100 0
b10110 %
b10110 -
b0 "
b0 /
b10111 $
b10111 ,
b10101 '
b10101 .
b10101 2
b10101 8
b10101 >
b10101 D
b10101 J
b10101 P
b10101 V
b10101 \
b10101 b
b10101 h
b10101 n
b10101 t
b10101 z
b10101 ""
b10101 ("
b10101 ."
b10101 4"
b10101 :"
b10101 @"
b10101 F"
b10101 L"
b10101 R"
b10101 X"
b10101 ^"
b10101 d"
b10101 j"
b10101 p"
b10101 v"
b10101 |"
b10101 $#
b10101 *#
b10101 0#
b10111 #
b10111 +
#446
b10101 _"
b10101 "
b10101 /
b10101 b"
#450
0a"
1&
#460
1a"
0&
#465
0a"
1g"
b10111 *
b10101 !
b10101 0
b10111 %
b10111 -
b0 "
b0 /
b11000 $
b11000 ,
b10110 '
b10110 .
b10110 2
b10110 8
b10110 >
b10110 D
b10110 J
b10110 P
b10110 V
b10110 \
b10110 b
b10110 h
b10110 n
b10110 t
b10110 z
b10110 ""
b10110 ("
b10110 ."
b10110 4"
b10110 :"
b10110 @"
b10110 F"
b10110 L"
b10110 R"
b10110 X"
b10110 ^"
b10110 d"
b10110 j"
b10110 p"
b10110 v"
b10110 |"
b10110 $#
b10110 *#
b10110 0#
b11000 #
b11000 +
#466
b10110 e"
b10110 "
b10110 /
b10110 h"
#470
0g"
1&
#480
1g"
0&
#485
0g"
1m"
b11000 *
b10110 !
b10110 0
b11000 %
b11000 -
b0 "
b0 /
b11001 $
b11001 ,
b10111 '
b10111 .
b10111 2
b10111 8
b10111 >
b10111 D
b10111 J
b10111 P
b10111 V
b10111 \
b10111 b
b10111 h
b10111 n
b10111 t
b10111 z
b10111 ""
b10111 ("
b10111 ."
b10111 4"
b10111 :"
b10111 @"
b10111 F"
b10111 L"
b10111 R"
b10111 X"
b10111 ^"
b10111 d"
b10111 j"
b10111 p"
b10111 v"
b10111 |"
b10111 $#
b10111 *#
b10111 0#
b11001 #
b11001 +
#486
b10111 k"
b10111 "
b10111 /
b10111 n"
#490
0m"
1&
#500
1m"
0&
#505
0m"
1s"
b11001 *
b10111 !
b10111 0
b11001 %
b11001 -
b0 "
b0 /
b11010 $
b11010 ,
b11000 '
b11000 .
b11000 2
b11000 8
b11000 >
b11000 D
b11000 J
b11000 P
b11000 V
b11000 \
b11000 b
b11000 h
b11000 n
b11000 t
b11000 z
b11000 ""
b11000 ("
b11000 ."
b11000 4"
b11000 :"
b11000 @"
b11000 F"
b11000 L"
b11000 R"
b11000 X"
b11000 ^"
b11000 d"
b11000 j"
b11000 p"
b11000 v"
b11000 |"
b11000 $#
b11000 *#
b11000 0#
b11010 #
b11010 +
#506
b11000 q"
b11000 "
b11000 /
b11000 t"
#510
0s"
1&
#520
1s"
0&
#525
0s"
1y"
b11010 *
b11000 !
b11000 0
b11010 %
b11010 -
b0 "
b0 /
b11011 $
b11011 ,
b11001 '
b11001 .
b11001 2
b11001 8
b11001 >
b11001 D
b11001 J
b11001 P
b11001 V
b11001 \
b11001 b
b11001 h
b11001 n
b11001 t
b11001 z
b11001 ""
b11001 ("
b11001 ."
b11001 4"
b11001 :"
b11001 @"
b11001 F"
b11001 L"
b11001 R"
b11001 X"
b11001 ^"
b11001 d"
b11001 j"
b11001 p"
b11001 v"
b11001 |"
b11001 $#
b11001 *#
b11001 0#
b11011 #
b11011 +
#526
b11001 w"
b11001 "
b11001 /
b11001 z"
#530
0y"
1&
#540
1y"
0&
#545
0y"
1!#
b11011 *
b11001 !
b11001 0
b11011 %
b11011 -
b0 "
b0 /
b11100 $
b11100 ,
b11010 '
b11010 .
b11010 2
b11010 8
b11010 >
b11010 D
b11010 J
b11010 P
b11010 V
b11010 \
b11010 b
b11010 h
b11010 n
b11010 t
b11010 z
b11010 ""
b11010 ("
b11010 ."
b11010 4"
b11010 :"
b11010 @"
b11010 F"
b11010 L"
b11010 R"
b11010 X"
b11010 ^"
b11010 d"
b11010 j"
b11010 p"
b11010 v"
b11010 |"
b11010 $#
b11010 *#
b11010 0#
b11100 #
b11100 +
#546
b11010 }"
b11010 "
b11010 /
b11010 "#
#550
0!#
1&
#560
1!#
0&
#565
0!#
1'#
b11100 *
b11010 !
b11010 0
b11100 %
b11100 -
b0 "
b0 /
b11101 $
b11101 ,
b11011 '
b11011 .
b11011 2
b11011 8
b11011 >
b11011 D
b11011 J
b11011 P
b11011 V
b11011 \
b11011 b
b11011 h
b11011 n
b11011 t
b11011 z
b11011 ""
b11011 ("
b11011 ."
b11011 4"
b11011 :"
b11011 @"
b11011 F"
b11011 L"
b11011 R"
b11011 X"
b11011 ^"
b11011 d"
b11011 j"
b11011 p"
b11011 v"
b11011 |"
b11011 $#
b11011 *#
b11011 0#
b11101 #
b11101 +
#566
b11011 %#
b11011 "
b11011 /
b11011 (#
#570
0'#
1&
#580
1'#
0&
#585
0'#
1-#
b11101 *
b11011 !
b11011 0
b11101 %
b11101 -
b0 "
b0 /
b11110 $
b11110 ,
b11100 '
b11100 .
b11100 2
b11100 8
b11100 >
b11100 D
b11100 J
b11100 P
b11100 V
b11100 \
b11100 b
b11100 h
b11100 n
b11100 t
b11100 z
b11100 ""
b11100 ("
b11100 ."
b11100 4"
b11100 :"
b11100 @"
b11100 F"
b11100 L"
b11100 R"
b11100 X"
b11100 ^"
b11100 d"
b11100 j"
b11100 p"
b11100 v"
b11100 |"
b11100 $#
b11100 *#
b11100 0#
b11110 #
b11110 +
#586
b11100 +#
b11100 "
b11100 /
b11100 .#
#590
0-#
1&
#600
1-#
0&
#605
0-#
13#
b11110 *
b11100 !
b11100 0
b11110 %
b11110 -
b0 "
b0 /
b11111 $
b11111 ,
b11101 '
b11101 .
b11101 2
b11101 8
b11101 >
b11101 D
b11101 J
b11101 P
b11101 V
b11101 \
b11101 b
b11101 h
b11101 n
b11101 t
b11101 z
b11101 ""
b11101 ("
b11101 ."
b11101 4"
b11101 :"
b11101 @"
b11101 F"
b11101 L"
b11101 R"
b11101 X"
b11101 ^"
b11101 d"
b11101 j"
b11101 p"
b11101 v"
b11101 |"
b11101 $#
b11101 *#
b11101 0#
b11111 #
b11111 +
#606
b11101 1#
b11101 "
b11101 /
b11101 4#
#610
03#
1&
#620
13#
0&
#625
15
03#
b11111 *
b11101 !
b11101 0
b11111 %
b11111 -
b1 "
b1 /
b0 $
b0 ,
b11110 '
b11110 .
b11110 2
b11110 8
b11110 >
b11110 D
b11110 J
b11110 P
b11110 V
b11110 \
b11110 b
b11110 h
b11110 n
b11110 t
b11110 z
b11110 ""
b11110 ("
b11110 ."
b11110 4"
b11110 :"
b11110 @"
b11110 F"
b11110 L"
b11110 R"
b11110 X"
b11110 ^"
b11110 d"
b11110 j"
b11110 p"
b11110 v"
b11110 |"
b11110 $#
b11110 *#
b11110 0#
b0 #
b0 +
#626
b11110 3
b11110 "
b11110 /
b11110 6
#630
05
1&
#635
