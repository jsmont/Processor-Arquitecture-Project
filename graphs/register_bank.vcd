$date
	Wed Dec 13 16:45:22 2017
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module test $end
$var wire 8 ! data_out2 [0:7] $end
$var wire 8 " data_out1 [0:7] $end
$var reg 5 # addr_in [0:4] $end
$var reg 5 $ addr_out1 [0:4] $end
$var reg 5 % addr_out2 [0:4] $end
$var reg 1 & clk $end
$var reg 8 ' data_in [0:7] $end
$var reg 1 ( reset $end
$var reg 1 ) write $end
$var integer 32 * i [31:0] $end
$scope module rbank $end
$var wire 5 + addr_in [0:4] $end
$var wire 5 , addr_out1 [0:4] $end
$var wire 5 - addr_out2 [0:4] $end
$var wire 1 & clk $end
$var wire 8 . data_in [0:7] $end
$var wire 8 / data_out1 [0:7] $end
$var wire 8 0 data_out2 [0:7] $end
$var wire 1 ( reset $end
$var wire 1 ) write $end
$var integer 32 1 i [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b100000 1
b0 0
b0 /
b1 .
b0 -
b0 ,
b0 +
bx *
1)
1(
b1 '
0&
b0 %
b0 $
b0 #
b0 "
b0 !
$end
#5
b0 *
b1 $
b1 ,
b1 #
b1 +
#10
b1 "
b1 /
1&
#20
0&
#25
b1 *
b1 !
b1 0
b1 %
b1 -
b0 "
b0 /
b10 $
b10 ,
b0 '
b0 .
b10 #
b10 +
#30
1&
#40
0&
#45
b10 *
b0 !
b0 0
b10 %
b10 -
b11 $
b11 ,
b1 '
b1 .
b11 #
b11 +
#50
b1 "
b1 /
1&
#60
0&
#65
b11 *
b1 !
b1 0
b11 %
b11 -
b0 "
b0 /
b100 $
b100 ,
b10 '
b10 .
b100 #
b100 +
#70
b10 "
b10 /
1&
#80
0&
#85
b100 *
b10 !
b10 0
b100 %
b100 -
b0 "
b0 /
b101 $
b101 ,
b11 '
b11 .
b101 #
b101 +
#90
b11 "
b11 /
1&
#100
0&
#105
b101 *
b11 !
b11 0
b101 %
b101 -
b0 "
b0 /
b110 $
b110 ,
b100 '
b100 .
b110 #
b110 +
#110
b100 "
b100 /
1&
#120
0&
#125
b110 *
b100 !
b100 0
b110 %
b110 -
b0 "
b0 /
b111 $
b111 ,
b101 '
b101 .
b111 #
b111 +
#130
b101 "
b101 /
1&
#140
0&
#145
b111 *
b101 !
b101 0
b111 %
b111 -
b0 "
b0 /
b1000 $
b1000 ,
b110 '
b110 .
b1000 #
b1000 +
#150
b110 "
b110 /
1&
#160
0&
#165
b1000 *
b110 !
b110 0
b1000 %
b1000 -
b0 "
b0 /
b1001 $
b1001 ,
b111 '
b111 .
b1001 #
b1001 +
#170
b111 "
b111 /
1&
#180
0&
#185
b1001 *
b111 !
b111 0
b1001 %
b1001 -
b0 "
b0 /
b1010 $
b1010 ,
b1000 '
b1000 .
b1010 #
b1010 +
#190
b1000 "
b1000 /
1&
#200
0&
#205
b1010 *
b1000 !
b1000 0
b1010 %
b1010 -
b0 "
b0 /
b1011 $
b1011 ,
b1001 '
b1001 .
b1011 #
b1011 +
#210
b1001 "
b1001 /
1&
#220
0&
#225
b1011 *
b1001 !
b1001 0
b1011 %
b1011 -
b0 "
b0 /
b1100 $
b1100 ,
b1010 '
b1010 .
b1100 #
b1100 +
#230
b1010 "
b1010 /
1&
#240
0&
#245
b1100 *
b1010 !
b1010 0
b1100 %
b1100 -
b0 "
b0 /
b1101 $
b1101 ,
b1011 '
b1011 .
b1101 #
b1101 +
#250
b1011 "
b1011 /
1&
#260
0&
#265
b1101 *
b1011 !
b1011 0
b1101 %
b1101 -
b0 "
b0 /
b1110 $
b1110 ,
b1100 '
b1100 .
b1110 #
b1110 +
#270
b1100 "
b1100 /
1&
#280
0&
#285
b1110 *
b1100 !
b1100 0
b1110 %
b1110 -
b0 "
b0 /
b1111 $
b1111 ,
b1101 '
b1101 .
b1111 #
b1111 +
#290
b1101 "
b1101 /
1&
#300
0&
#305
b1111 *
b1101 !
b1101 0
b1111 %
b1111 -
b0 "
b0 /
b10000 $
b10000 ,
b1110 '
b1110 .
b10000 #
b10000 +
#310
b1110 "
b1110 /
1&
#320
0&
#325
b10000 *
b1110 !
b1110 0
b10000 %
b10000 -
b0 "
b0 /
b10001 $
b10001 ,
b1111 '
b1111 .
b10001 #
b10001 +
#330
b1111 "
b1111 /
1&
#340
0&
#345
b10001 *
b1111 !
b1111 0
b10001 %
b10001 -
b0 "
b0 /
b10010 $
b10010 ,
b10000 '
b10000 .
b10010 #
b10010 +
#350
b10000 "
b10000 /
1&
#360
0&
#365
b10010 *
b10000 !
b10000 0
b10010 %
b10010 -
b0 "
b0 /
b10011 $
b10011 ,
b10001 '
b10001 .
b10011 #
b10011 +
#370
b10001 "
b10001 /
1&
#380
0&
#385
b10011 *
b10001 !
b10001 0
b10011 %
b10011 -
b0 "
b0 /
b10100 $
b10100 ,
b10010 '
b10010 .
b10100 #
b10100 +
#390
b10010 "
b10010 /
1&
#400
0&
#405
b10100 *
b10010 !
b10010 0
b10100 %
b10100 -
b0 "
b0 /
b10101 $
b10101 ,
b10011 '
b10011 .
b10101 #
b10101 +
#410
b10011 "
b10011 /
1&
#420
0&
#425
b10101 *
b10011 !
b10011 0
b10101 %
b10101 -
b0 "
b0 /
b10110 $
b10110 ,
b10100 '
b10100 .
b10110 #
b10110 +
#430
b10100 "
b10100 /
1&
#440
0&
#445
b10110 *
b10100 !
b10100 0
b10110 %
b10110 -
b0 "
b0 /
b10111 $
b10111 ,
b10101 '
b10101 .
b10111 #
b10111 +
#450
b10101 "
b10101 /
1&
#460
0&
#465
b10111 *
b10101 !
b10101 0
b10111 %
b10111 -
b0 "
b0 /
b11000 $
b11000 ,
b10110 '
b10110 .
b11000 #
b11000 +
#470
b10110 "
b10110 /
1&
#480
0&
#485
b11000 *
b10110 !
b10110 0
b11000 %
b11000 -
b0 "
b0 /
b11001 $
b11001 ,
b10111 '
b10111 .
b11001 #
b11001 +
#490
b10111 "
b10111 /
1&
#500
0&
#505
b11001 *
b10111 !
b10111 0
b11001 %
b11001 -
b0 "
b0 /
b11010 $
b11010 ,
b11000 '
b11000 .
b11010 #
b11010 +
#510
b11000 "
b11000 /
1&
#520
0&
#525
b11010 *
b11000 !
b11000 0
b11010 %
b11010 -
b0 "
b0 /
b11011 $
b11011 ,
b11001 '
b11001 .
b11011 #
b11011 +
#530
b11001 "
b11001 /
1&
#540
0&
#545
b11011 *
b11001 !
b11001 0
b11011 %
b11011 -
b0 "
b0 /
b11100 $
b11100 ,
b11010 '
b11010 .
b11100 #
b11100 +
#550
b11010 "
b11010 /
1&
#560
0&
#565
b11100 *
b11010 !
b11010 0
b11100 %
b11100 -
b0 "
b0 /
b11101 $
b11101 ,
b11011 '
b11011 .
b11101 #
b11101 +
#570
b11011 "
b11011 /
1&
#580
0&
#585
b11101 *
b11011 !
b11011 0
b11101 %
b11101 -
b0 "
b0 /
b11110 $
b11110 ,
b11100 '
b11100 .
b11110 #
b11110 +
#590
b11100 "
b11100 /
1&
#600
0&
#605
b11110 *
b11100 !
b11100 0
b11110 %
b11110 -
b0 "
b0 /
b11111 $
b11111 ,
b11101 '
b11101 .
b11111 #
b11111 +
#610
b11101 "
b11101 /
1&
#620
0&
#625
b11111 *
b11101 !
b11101 0
b11111 %
b11111 -
b0 "
b0 /
b0 $
b0 ,
b11110 '
b11110 .
b0 #
b0 +
#630
1&
#635
